<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="story">
	<!-- 글목록 O-->
	<select id="list" parameterType="HashMap" resultType="com.careme.model.dto.StoryBoardDto">
		select SQL_CALC_FOUND_ROWS * 
		from story_board inner join members 
		on story_board.member_idx = members.member_idx 
		order by story_board.story_board_idx desc 
		limit #{start_idx}, #{contentPerPage}
	</select>
	<select id="selectTotal" resultType="int">
		select FOUND_ROWS()
	</select>
	<select id="fileList" resultType="com.careme.model.dto.StoryFileDto">
		select * from story_board inner join story_file where story_board.story_board_idx = story_file.story_board_idx order by story_board.story_board_idx desc 
	</select>
	<!-- 인기글 -->
	<select id="hit" parameterType="com.careme.model.dto.StoryBoardDto" resultType="com.careme.model.dto.StoryBoardDto">
		select * from story_board inner join members where story_board.member_idx = members.member_idx order by view_count desc limit 3
	</select>
	<!-- 검색 -->
	<select id="search" parameterType="com.careme.model.command.StoryCommand" resultType="com.careme.model.dto.StoryBoardDto">
		select SQL_CALC_FOUND_ROWS * from story_board inner join members on story_board.member_idx = members.member_idx
		<choose>
			<when test='searchType != null and searchType.equals("member_id")'>
				where member_id like concat('%',#{searchKeyword},'%') order by story_board_idx desc limit #{start_idx}, #{contentPerPage}
			</when>
			<when test='searchType != null and searchType.equals("title")'>
				where title like concat('%',#{keyword},'%') order by story_board_idx desc limit #{start_idx}, #{contentPerPage}
			</when>
			<when test='searchType != null and searchType.equals("content")'>
				where content like concat('%',#{keyword},'%') order by story_board_idx desc limit #{start_idx}, #{contentPerPage}
			</when>
		</choose>
	</select>
	
	
	<!-- 상세보기 O -->
	<select id="read" resultType="com.careme.model.dto.StoryBoardDto">
		select * from story_board where story_board.del_yn = 'n' and story_board.story_board_idx = #{story_board_idx}
	</select>
	<select id="readFile" resultType="com.careme.model.dto.StoryFileDto">
		select * from story_board inner join story_file 
		on story_board.story_board_idx = story_file.story_board_idx 
		where story_board.del_yn = 'n' and story_board.story_board_idx = #{story_board_idx}
	</select>
	<!-- 댓글 보기 O -->
	<select id="readCom" parameterType="int" resultType="com.careme.model.dto.StoryCommentDto">
		select content, members.member_id, story_comment.reg_date, story_comment.heart 
		from story_comment inner join members 
		on story_comment.member_idx = members.member_idx 
		where story_comment.story_board_idx = #{story_board_idx}
	</select>
	<!-- 조회수 증가 O-->
	<update id="viewCount" parameterType="com.careme.model.dto.StoryBoardDto">
		update story_board 
		set view_count = view_count + 1 
		where story_board_idx = #{story_board_idx}
	</update>
	<!-- 좋아요 수 증가 -->
	<update id="heart" parameterType="com.careme.model.dto.StoryBoardDto">
		update story_board 
		set heart = heart + 1 
		where story_board_idx = #{story_board_idx}
	</update>
	
	
	<!-- 글작성 -->
	<insert id="insert" parameterType="com.careme.model.dto.StoryBoardDto" useGeneratedKeys="true" keyProperty="story_board_idx" >
		insert into story_board (member_idx, tag_idx, title, content, heart, view_count, reg_date, update_date, del_yn) 
		values (#{member_idx}, #{tag_idx}, #{title}, #{content}, 0, 0, #{reg_date}, null, 'n')
		<selectKey keyProperty="story_board_idx" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<insert id="insertFile" parameterType="com.careme.model.dto.StoryFileDto">
		insert into story_file(story_board_idx, file_name, file_path, file_size, del_yn) 
		values(#{story_board_idx}, #{file_name}, #{file_path}, #{file_size}, 'n')
	</insert>
	<!-- 댓글 작성  -->
	<insert id="insertCom" parameterType="com.careme.model.dto.StoryCommentDto">
		insert into story_comment(story_board_idx, member_idx, content, heart, reg_date, del_yn)
		values(#{story_board_idx}, #{member_idx}, #{content}, 0, #{reg_date}, 'n')
	</insert>
	
	
	<!-- 글수정 O -->
	<update id="update" parameterType="com.careme.model.dto.StoryBoardDto">
		update story_board
		<set>
			<if test="title != null">title = #{title},</if>
			<if test="content != null">content = #{content}</if>
		</set>
		<where>story_board_idx = #{story_board_idx}</where>
	</update>
	<update id="updateFile" parameterType="com.careme.model.dto.StoryFileDto">
		update story_file 
		<set>
		<if test="file_name != null">file_name = #{file_name},</if>
		<if test="file_name != null">file_path = #{file_path},</if>
		<if test="file_name != null">file_size = #{file_size},</if>
		</set>
		where story_board_idx = #{story_board_idx}
	</update>
	<update id="updateCom" parameterType="com.careme.model.dto.StoryCommentDto">
		update story_board set content = #{content}
	</update>
	<!-- 좋아요 수 증가 -->
	<update id="comHeart" parameterType="com.careme.model.dto.StoryCommentDto">
		update story_comment 
		set heart = heart + 1 
		where story_comment_idx = #{story_comment_idx}
	</update>
	
	
	<!-- 글삭제 -->
	<delete id="delete" parameterType="int">
		delete from story_board where del_yn = 'y' and story_board_idx = #{story_board_idx}
	</delete>
	<!-- 파일 삭제 -->
	<delete id="deleteFile" parameterType="int">
		delete from story_file where del_yn = 'y' and story_board_idx = #{story_board_idx}
	</delete>
	<!-- 댓글 삭제 -->
	<delete id="deleteCom" parameterType="int">
		delete from story_comment where del_yn = 'y' and story_board_idx = #{story_board_idx}
	</delete>
	
</mapper>