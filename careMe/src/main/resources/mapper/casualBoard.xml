<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="casualQuestionBrd">

<!-- 게시판 레이아웃과 내용 구현 -->
	
	<select id="getArticles" resultType="com.careme.model.dto.QuestionBoardDto" parameterType="HashMap">
		select SQL_CALC_FOUND_ROWS * from question_board inner join members on question_board.member_idx=members.member_idx where question_type like 'n' order by question_table_idx desc limit #{start_idx}, #{contentPerPage}
	</select>
	
	<select id="selectTotal" resultType="int">
		select FOUND_ROWS()
	</select>
	
	<select id="getArtContent" resultType="com.careme.model.dto.QuestionBoardDto" parameterType="com.careme.model.dto.QuestionBoardDto">
		select * from question_board inner join members on question_board.member_idx=members.member_idx where question_table_idx=#{question_table_idx}
	</select>
	
	<select id="getArtFiles" resultType="com.careme.model.dto.BoardFileDto" parameterType="int">
		select * from question_board_file where question_table_idx=#{question_table_idx}
	</select>
	
	<update id="getArtView" parameterType="com.careme.model.dto.QuestionBoardDto">
		update question_board set 
			view_count=view_count+1 
			where question_table_idx=#{question_table_idx}
	</update>
	
	
<!-- 게시판글 검색 -->
	<select id="getSrchArticle" resultType="com.careme.model.dto.QuestionBoardDto" parameterType="com.careme.model.command.SearchBoardCommand">
		select SQL_CALC_FOUND_ROWS * from question_board inner join members on question_board.member_idx=members.member_idx
			<choose>
				<when test='search_option.equals("member_id")'>
					where question_type like 'n' and member_id like concat('%',#{searchKeyword},'%') order by question_table_idx desc limit #{start_idx}, #{contentPerPage}
				</when>
				<when test='search_option.equals("title")'>
					where question_type like 'n' and title like concat('%',#{searchKeyword},'%') order by question_table_idx desc limit #{start_idx}, #{contentPerPage}
				</when>
				<when test='search_option.equals("content")'>
					where question_type like 'n' and content like concat('%',#{searchKeyword},'%') order by question_table_idx desc limit #{start_idx}, #{contentPerPage}
				</when>
			</choose>
	</select>  

<!-- 게시판글 작성 수정 삭제 -->
	
	<insert id="insertArt" parameterType="com.careme.model.dto.QuestionBoardDto">
		insert into question_board (member_idx, title, question_type, doctor_idx, pet_idx, pet_species_idx, content, 
		view_count, is_private, reg_date, update_date, del_yn, pet_care_idx) values (#{member_idx}, #{title}, #{question_type}, #{doctor_idx}, #{pet_idx}, 
		#{pet_species_idx}, #{content}, 0, #{is_private}, #{reg_date}, null, 'n' #{pet_care_idx})
		
		<selectKey keyProperty="question_table_idx" resultType="int">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<insert id="insertFile" parameterType="com.careme.model.dto.BoardFileDto">
		 insert into question_board_file (question_table_idx, file_name, file_path, file_size, reg_date, del_yn) 
		 values (#{question_table_idx}, #{file_name}, #{file_path}, #{file_size}, #{reg_date}, 'n')
	</insert>
	
    <update id="updateArticle" parameterType="com.careme.model.dto.QuestionBoardDto">
		update question_board set title=#{title}, content=#{content}, pet_species_idx=#{pet_species_idx}, 
		doctor_idx=#{doctor_idx}, is_private=#{is_private}, pet_idx=#{pet_idx}, update_date=#{update_date} where question_table_idx=#{question_table_idx}
	</update>

	<delete id="deleteArticle" parameterType="int">
		delete from question_board where question_table_idx=#{question_table_idx}
	</delete>

<!-- comment 작성 수정 삭제 -->

	<insert id="insertComment" parameterType="com.careme.model.dto.BoardCommentDto">
		insert into question_board_comment (question_table_idx, member_idx, content, heart, reg_date, del_yn) 
		values (#{question_table_idx}, #{member_idx}, #{content}, 0, #{reg_date}, 'n')
		
		<selectKey keyProperty="question_board_comment_idx" resultType="int">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
    <update id="updateComment" parameterType="com.careme.model.dto.BoardCommentDto">
		update question_board_comment set member_idx=#{member_idx}, content=#{content}, heart=#{heart}, reg_date=#{reg_date}, del_yn=#{del_yn} 
		where question_board_comment_idx=#{question_board_comment_idx}
	</update>

	<delete id="deleteComment" parameterType="int">
		delete from question_board_comment where question_board_comment_idx=#{question_board_comment_idx}
	</delete>
	
	<select id="getArtComments" resultType="com.careme.model.dto.BoardCommentDto" parameterType="int">
		select * from question_board_comment inner join members on question_board_comment.member_idx=members.member_idx where question_table_idx=#{question_table_idx} 
	</select>
	
	<select id="getArtCommentsIdx" resultType="com.careme.model.dto.BoardCommentDto" parameterType="int">
		select * from question_board_comment inner join members on question_board_comment.member_idx=members.member_idx where question_board_comment_idx=#{question_board_comment_idx} 
	</select>
	
<!-- Heart 기능 -->

	<update id="addHeart" parameterType="int">
		update question_board_comment set heart=heart+1 where question_board_comment_idx=#{question_board_comment_idx}
	</update>
	
	<update id="subHeart" parameterType="int">
		update question_board_comment set heart=heart-1 where question_board_comment_idx=#{question_board_comment_idx}
	</update>

<!-- 태그 불러오기 -->
	
	<select id="getTags" resultType="com.careme.model.dto.TagDto">
		select * from tag inner join board_use_tag on tag.tag_idx = board_use_tag.tag_idx 
		where board_idx = #{board_idx} and board_type = 'c'
	</select>
	
<!-- 회원 작성 글 가져오기 -->
	<select id="getMemberCasualBrd" resultType="com.careme.model.dto.QuestionBoardDto" parameterType="HashMap">
		select SQL_CALC_FOUND_ROWS * from question_board where question_type like 'n' order by reg_date desc limit 1, #{contentPerPage}
	</select>


</mapper>